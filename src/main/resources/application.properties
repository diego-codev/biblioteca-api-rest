############################################################
# Configurações de Segurança / Aplicação
############################################################
## Secret usada para assinar/validar JWT (override via env var JWT_SECRET). Propriedade custom consumida por TokenService.
api.security.token.secret=${JWT_SECRET:my-secret-key}
spring.application.name=biblioteca-api

############################################################
# Banco de Dados (PostgreSQL) - Pode ser sobrescrito via variáveis de ambiente
# DB_URL, DB_USER, DB_PASSWORD permitem configurar facilmente em Docker/produção
############################################################
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=${DB_URL:jdbc:postgresql://db:5432/biblioteca}
spring.datasource.username=${DB_USER:postgres}
spring.datasource.password=${DB_PASSWORD:postgres}

############################################################
# JPA / Hibernate / Flyway
# ddl-auto=validate: garante que mudanças de schema passem por migrações Flyway
# show-sql=true: útil em desenvolvimento (remover em produção se poluir logs)
# open-in-view=false: evita manter sessão Hibernate aberta na camada web
############################################################
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=validate
## Permite iniciar controle caso schema já exista
spring.flyway.baseline-on-migrate=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.open-in-view=false

############################################################
# Actuator (exposto só health para readiness/liveness probes em container)
############################################################
management.endpoints.web.exposure.include=health
management.endpoint.health.probes.enabled=true
management.endpoint.health.show-details=never

